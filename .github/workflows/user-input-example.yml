name: User Input Example

on:
  workflow_dispatch:
    inputs:
      message:
        description: 'Your custom message'
        required: true
        default: 'Hello from GitHub Actions!'
        type: string
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - production
      enable_notifications:
        description: 'Enable notifications'
        required: false
        default: false
        type: boolean
      version:
        description: 'Version number (optional)'
        required: false
        type: string

jobs:
  process-user-input:
    name: Process User Input
    runs-on: ubuntu-latest
    outputs:
      formatted_message: ${{ steps.format.outputs.message }}
      user_config: ${{ steps.config.outputs.settings }}

    steps:
      - name: Display user inputs
        run: |
          echo "=== User Provided Inputs ==="
          echo "Message: ${{ github.event.inputs.message }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Enable Notifications: ${{ github.event.inputs.enable_notifications }}"
          echo "Version: ${{ github.event.inputs.version || 'Not specified' }}"

      - name: Format message with user input
        id: format
        run: |
          USER_MESSAGE="${{ github.event.inputs.message }}"
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          VERSION="${{ github.event.inputs.version }}"
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')

          if [ -n "$VERSION" ]; then
            FORMATTED="[$ENVIRONMENT] $USER_MESSAGE (v$VERSION) - $TIMESTAMP"
          else
            FORMATTED="[$ENVIRONMENT] $USER_MESSAGE - $TIMESTAMP"
          fi

          echo "message=$FORMATTED" >> $GITHUB_OUTPUT
          echo "Formatted message: $FORMATTED"

      - name: Create configuration
        id: config
        run: |
          NOTIFICATIONS="${{ github.event.inputs.enable_notifications }}"
          ENV="${{ github.event.inputs.environment }}"

          CONFIG="env=$ENV,notifications=$NOTIFICATIONS,user=${{ github.actor }}"
          echo "settings=$CONFIG" >> $GITHUB_OUTPUT
          echo "Configuration: $CONFIG"

  use-formatted-output:
    name: Use Formatted Output
    runs-on: ubuntu-latest
    needs: process-user-input

    steps:
      - name: Display formatted message
        run: |
          echo "=== Final Results ==="
          echo "Formatted Message: ${{ needs.process-user-input.outputs.formatted_message }}"
          echo "User Configuration: ${{ needs.process-user-input.outputs.user_config }}"

      - name: Conditional notification step
        if: github.event.inputs.enable_notifications == 'true'
        run: |
          echo "ðŸ”” Notifications are ENABLED"
          echo "Would send notification with message: ${{ needs.process-user-input.outputs.formatted_message }}"

      - name: Environment-specific action
        run: |
          ENV="${{ github.event.inputs.environment }}"

          case "$ENV" in
            "production")
              echo "ðŸš€ Production deployment with extra validation"
              echo "Message: ${{ needs.process-user-input.outputs.formatted_message }}"
              ;;
            "staging")
              echo "ðŸ§ª Staging deployment for testing"
              echo "Message: ${{ needs.process-user-input.outputs.formatted_message }}"
              ;;
            "dev")
              echo "ðŸ’» Development deployment"
              echo "Message: ${{ needs.process-user-input.outputs.formatted_message }}"
              ;;
          esac

      - name: Create summary file
        run: |
          cat > workflow-summary.txt << EOF
          GitHub Actions Workflow Summary
          ===============================

          Triggered by: ${{ github.actor }}
          Run ID: ${{ github.run_id }}
          Run Number: ${{ github.run_number }}

          User Inputs:
          - Message: ${{ github.event.inputs.message }}
          - Environment: ${{ github.event.inputs.environment }}
          - Notifications: ${{ github.event.inputs.enable_notifications }}
          - Version: ${{ github.event.inputs.version || 'Not specified' }}

          Generated Output:
          ${{ needs.process-user-input.outputs.formatted_message }}

          Configuration:
          ${{ needs.process-user-input.outputs.user_config }}
          EOF

          echo "Created summary file:"
          cat workflow-summary.txt

      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: workflow-summary
          path: workflow-summary.txt
