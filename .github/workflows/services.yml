name: Services Workflow

on:
  workflow_dispatch:
    inputs:
      services:
        description: "JSON array of services with path and name keys"
        required: true
        default: '[{"path": "services/serviceA", "name": "serviceA"}]'
        type: string
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set services list
        id: set-services
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo 'services=${{ github.event.inputs.services }}' >> $GITHUB_OUTPUT
          else
            # TODO: Make this work on main too
            if [-z "${{ github.head_ref }}" ];
            then
              services_json=$(python scripts/services.py --last-green --owner ${{ github.repository_owner }} --repo ${{ github.event.repository.name }} --branch ${{ github.ref_name }})
            else
              services_json=$(python scripts/services.py --last-green --owner ${{ github.repository_owner }} --repo ${{ github.event.repository.name }} --branch ${{ github.head_ref }})
            fi
            # Debug output
            echo "Generated services JSON: $services_json"

            echo "services=${services_json}" >> $GITHUB_OUTPUT
          fi

  build:
    needs: setup
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.services != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.setup.outputs.services) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build service
        run: |
          echo "Building service: ${{ matrix.service.name }}"
          echo "Service path: ${{ matrix.service.path }}"
          cd "${{ matrix.service.path }}"
          if [ -f "Makefile" ]; then
            make build
          else
            echo "No Makefile found in ${{ matrix.service.path }}"
          fi

      - name: Test service
        run: |
          echo "Testing service: ${{ matrix.service.name }}"
          cd "${{ matrix.service.path }}"
          if [ -f "Makefile" ]; then
            make test
          else
            echo "No Makefile found for testing in ${{ matrix.service.path }}"
          fi

  deploy:
    needs: [setup, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: ${{ fromJson(needs.setup.outputs.services) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy service
        run: |
          echo "Deploying service: ${{ matrix.service.name }}"
          cd "${{ matrix.service.path }}"
          if [ -f "Makefile" ]; then
            make deploy
          else
            echo "No Makefile found for deployment in ${{ matrix.service.path }}"
          fi
